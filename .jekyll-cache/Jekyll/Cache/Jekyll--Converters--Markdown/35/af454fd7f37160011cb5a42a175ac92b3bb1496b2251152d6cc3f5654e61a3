I"µ<ul>
    <li> list all branches </li>  
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git branch â€“a

</code></pre></div></div>
<ul>
    <li> checkout the branch you want to use  </li>  
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git checkout &lt;feature_branch&gt;

</code></pre></div></div>
<ul>
    <li> confirm the branch you are working on  </li>  
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git branch 

</code></pre></div></div>

<ul>
    <li> Initialize a repo </li>  
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git init 

</code></pre></div></div>

<ul>
    <li> Adds the files in the local repository and stages them for commit, 
        To stage specific file, use its filename </li>  
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git add .

</code></pre></div></div>

<ul>
    <li>  To unstage a file </li>  
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git reset HEAD your-file

</code></pre></div></div>

<ul>
    <li> To commit a change </li>  
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git commit -m

</code></pre></div></div>

<ul>
    <li> To remove a previous commit . Git reset is opposite of gid add
     --soft flag will preserve changes and just removes the commit</li>  
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git reset --soft HEAD~1

</code></pre></div></div>

<ul>
    <li> To remove a commit and also undo changes.</li>  
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git reset --soft HEAD~1

</code></pre></div></div>

<ul>
    <li> Check concise commit history </li>  
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git log --oneline --graph 

</code></pre></div></div>

<ul>
    <li> list all branches </li>  
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git branch â€“a

</code></pre></div></div>

<ul>
    <li>Add the URL for the remote repository where your local repository will be pushed </li>  
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> git remote add origin &lt;remote repository URL&gt;

</code></pre></div></div>

<ul>
    <li> check remote status </li>  
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git remote -v

</code></pre></div></div>

<ul>
    <li> Change remote (from old repo eg: previous company) to a new github repo ( first create a new repo and use its ssh link) </li>  
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git remote set-url origin git@github.com:username/repo.git

</code></pre></div></div>

<ul>
    <li> To remove files from working tree and from index </li>  
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git rm &lt;file-name&gt;

</code></pre></div></div>

<hr />

:ET